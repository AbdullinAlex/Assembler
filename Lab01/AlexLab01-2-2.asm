include \masm64\include64\masm64rt.inc
count PROTO arg_a:QWORD
.data
mas1 dq 12, 14, 5, 7, 42        ; мсссив 
m1 dq 5                         ; константа M
l1 dq 2                         ; константа L
zero1 dq 0                      ; константный 0
len1 dq 5                       ; размерность массива 
resmas1 dq 3 dup(?),0           ; результирующий массив
title1 db "Решение задачи.",0
ifmt1 db "Заданы натуральные числа а, а2…аn. Указать те из них, в которых остаток от деления на M будет равняться L (0 <= L <= M – 1)",10,
"Результат:",10,
"resmas[0] = %d ",10,
"resmas[1] = %d ",10,
"resmas[2] = %d ",10,
"Автор: Абдуллин А.Р.",0
buf1 dq 3 dup(0),0              ; буфер вывода сообщения

.code
entry_point proc

mov r15, len1                    ; в r15 счетчик елементов в массиве
lea rbx, byte ptr mas1           ; установка указателя в rbx на первй елемент массива 
lea rsi, byte ptr resmas1        ; установка указателя в rsi на первй елемент  результирующего массива
mov rcx, m1                      ; в rcx константу M

@1:
xor rax, rax            ; обнуление регистра rax
xor rdx, rdx            ; обнуление регистра rdx
mov rax,[rbx]           ; в rax заносим первый елемент массива 
div rcx                 ; делим елемент массива на константу M
cmp rdx, l1             ; сравниваем остачу от деления с значением l1
je equel                ; переход, если значения еквивалентны 
add rbx, 8              ; перемещение на следующий елемент массива
dec r15                 ; декремент пройденых елементов в массиве
cmp r15, zero1          ; сравнение пройденых елементов в массиве с 0
je zero                 ; переход, если значение пройденых елементов (r15) равно 0
jmp @1                  ; если нет, то переход в начало

equel:
xor r8, r8              ; обнуление регистра r8
mov r8,[rbx]            ; запись значения елемента массива в r8
mov [rsi],r8            ; запись из r8 в результирующий массив
add rbx, 8              ; шагаем по массиву 
add rsi, 8              ; шагаем по результирующему массиву
dec r15                 ; уменьшаем счетчик на один
cmp r15, zero1          ; сравнение пройденых елементов в массиве с 0
je zero                 ; переход, если значение пройденых елементов (r15) равно 0
jmp @1                  ; если нет, то переход в начало
equelEnd:

zero:
mov r10, resmas1         ; запись результата первого елемента массива в r10
mov r11, resmas1[8]      ; запись результата первого елемента массива в r11
mov r12, resmas1[16]     ; запись результата первого елемента массива в r12
                   
invoke wsprintf, ADDR buf1, ADDR ifmt1, r10, r11, r12;
invoke MessageBox,0,ADDR buf1, ADDR title1, MB_ICONINFORMATION
invoke ExitProcess, 0
entry_point endp
end